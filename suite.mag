load "lairez.mag"; // lairezPeriods
load "pathfinder.mag";
load "PeriodHomotopy.mag";

// useful rings to have defined

QQ:=Rationals();
P<x,y,z,w>:=PolynomialRing(QQ,4);
CC<I>:=ComplexField(30);
K<t>:=FunctionField(QQ);
RR<D>:=PolynomialRing(K);


// useful functions

function randomHomPoly(ring,deg : coefSize:=10, sparse:=0)

mons:=MonomialsOfDegree(ring,deg);

if sparse gt 0 then
  mons:=IndexedSetToSet(MonomialsOfDegree(ring,deg));
  mons:=SetToSequence(RandomSubset(mons,sparse));
end if;

repeat
  p:=&+[Random([-coefSize..coefSize])*mon : mon in mons];
until not p eq 0;

return p;

end function;

function smoothPlaneCurve(deg : sparse:=5)
  P<x,y,z>:=PolynomialRing(QQ,3);
  repeat
    f:=randomHomPoly(P,deg : sparse:=sparse);
  until not IsSingular(Scheme(Proj(P),f));
  return f;
end function;

function smoothHypersurface(ring,deg : coefSize:=10, sparse:=5, verbose:=false)
  attemptNo:=0;
  repeat
    f:=randomHomPoly(ring,deg : sparse:=sparse, coefSize:=coefSize);
  if verbose then 
    attemptNo+:=1;
    print "Attempt number:",attemptNo;
    print "f=",f;
  end if;
  until not IsSingular(Scheme(Proj(ring),f));
  return f;
end function;

